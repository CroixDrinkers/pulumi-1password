# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class Common(pulumi.CustomResource):
    name: pulumi.Output[str]
    notes: pulumi.Output[str]
    sections: pulumi.Output[list]
    tags: pulumi.Output[list]
    template: pulumi.Output[str]
    vault: pulumi.Output[str]
    def __init__(__self__, resource_name, opts=None, name=None, notes=None, sections=None, tags=None, template=None, vault=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a Common resource with the given unique name, props, and options.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        
        The **sections** object supports the following:
        
          * `fields` (`pulumi.Input[list]`)
        
            * `address` (`pulumi.Input[dict]`)
        
              * `city` (`pulumi.Input[str]`)
              * `country` (`pulumi.Input[str]`)
              * `region` (`pulumi.Input[str]`)
              * `state` (`pulumi.Input[str]`)
              * `street` (`pulumi.Input[str]`)
              * `zip` (`pulumi.Input[str]`)
        
            * `cardType` (`pulumi.Input[str]`)
            * `concealed` (`pulumi.Input[str]`)
            * `date` (`pulumi.Input[float]`)
            * `email` (`pulumi.Input[str]`)
            * `monthYear` (`pulumi.Input[float]`)
            * `name` (`pulumi.Input[str]`)
            * `phone` (`pulumi.Input[str]`)
            * `reference` (`pulumi.Input[str]`)
            * `sex` (`pulumi.Input[str]`)
            * `string` (`pulumi.Input[str]`)
            * `totp` (`pulumi.Input[str]`)
            * `url` (`pulumi.Input[str]`)
        
          * `name` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['name'] = name
            __props__['notes'] = notes
            __props__['sections'] = sections
            __props__['tags'] = tags
            if template is None:
                raise TypeError("Missing required property 'template'")
            __props__['template'] = template
            __props__['vault'] = vault
        super(Common, __self__).__init__(
            'onepassword:index/common:Common',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, name=None, notes=None, sections=None, tags=None, template=None, vault=None):
        """
        Get an existing Common resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        
        The **sections** object supports the following:
        
          * `fields` (`pulumi.Input[list]`)
        
            * `address` (`pulumi.Input[dict]`)
        
              * `city` (`pulumi.Input[str]`)
              * `country` (`pulumi.Input[str]`)
              * `region` (`pulumi.Input[str]`)
              * `state` (`pulumi.Input[str]`)
              * `street` (`pulumi.Input[str]`)
              * `zip` (`pulumi.Input[str]`)
        
            * `cardType` (`pulumi.Input[str]`)
            * `concealed` (`pulumi.Input[str]`)
            * `date` (`pulumi.Input[float]`)
            * `email` (`pulumi.Input[str]`)
            * `monthYear` (`pulumi.Input[float]`)
            * `name` (`pulumi.Input[str]`)
            * `phone` (`pulumi.Input[str]`)
            * `reference` (`pulumi.Input[str]`)
            * `sex` (`pulumi.Input[str]`)
            * `string` (`pulumi.Input[str]`)
            * `totp` (`pulumi.Input[str]`)
            * `url` (`pulumi.Input[str]`)
        
          * `name` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["name"] = name
        __props__["notes"] = notes
        __props__["sections"] = sections
        __props__["tags"] = tags
        __props__["template"] = template
        __props__["vault"] = vault
        return Common(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

