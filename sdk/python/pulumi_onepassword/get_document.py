# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetDocumentResult:
    """
    A collection of values returned by getDocument.
    """
    def __init__(__self__, content=None, name=None, tags=None, vault=None, id=None):
        if content and not isinstance(content, str):
            raise TypeError("Expected argument 'content' to be a str")
        __self__.content = content
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        __self__.tags = tags
        if vault and not isinstance(vault, str):
            raise TypeError("Expected argument 'vault' to be a str")
        __self__.vault = vault
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableGetDocumentResult(GetDocumentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDocumentResult(
            content=self.content,
            name=self.name,
            tags=self.tags,
            vault=self.vault,
            id=self.id)

def get_document(content=None,name=None,tags=None,vault=None,opts=None):
    """
    Use this data source to access information about an existing resource.
    
    """
    __args__ = dict()

    __args__['content'] = content
    __args__['name'] = name
    __args__['tags'] = tags
    __args__['vault'] = vault
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('onepassword:index/getDocument:getDocument', __args__, opts=opts).value

    return AwaitableGetDocumentResult(
        content=__ret__.get('content'),
        name=__ret__.get('name'),
        tags=__ret__.get('tags'),
        vault=__ret__.get('vault'),
        id=__ret__.get('id'))
