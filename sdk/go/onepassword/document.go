// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package onepassword

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Document struct {
	s *pulumi.ResourceState
}

// NewDocument registers a new resource with the given unique name, arguments, and options.
func NewDocument(ctx *pulumi.Context,
	name string, args *DocumentArgs, opts ...pulumi.ResourceOpt) (*Document, error) {
	if args == nil || args.FilePath == nil {
		return nil, errors.New("missing required argument 'FilePath'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["content"] = nil
		inputs["filePath"] = nil
		inputs["name"] = nil
		inputs["tags"] = nil
		inputs["vault"] = nil
	} else {
		inputs["content"] = args.Content
		inputs["filePath"] = args.FilePath
		inputs["name"] = args.Name
		inputs["tags"] = args.Tags
		inputs["vault"] = args.Vault
	}
	s, err := ctx.RegisterResource("onepassword:index/document:Document", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Document{s: s}, nil
}

// GetDocument gets an existing Document resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocument(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DocumentState, opts ...pulumi.ResourceOpt) (*Document, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["content"] = state.Content
		inputs["filePath"] = state.FilePath
		inputs["name"] = state.Name
		inputs["tags"] = state.Tags
		inputs["vault"] = state.Vault
	}
	s, err := ctx.ReadResource("onepassword:index/document:Document", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Document{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Document) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Document) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *Document) Content() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["content"])
}

func (r *Document) FilePath() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["filePath"])
}

func (r *Document) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *Document) Tags() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["tags"])
}

func (r *Document) Vault() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["vault"])
}

// Input properties used for looking up and filtering Document resources.
type DocumentState struct {
	Content interface{}
	FilePath interface{}
	Name interface{}
	Tags interface{}
	Vault interface{}
}

// The set of arguments for constructing a Document resource.
type DocumentArgs struct {
	Content interface{}
	FilePath interface{}
	Name interface{}
	Tags interface{}
	Vault interface{}
}
