// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getIdentity(args?: GetIdentityArgs, opts?: pulumi.InvokeOptions): Promise<GetIdentityResult> & GetIdentityResult {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetIdentityResult> = pulumi.runtime.invoke("onepassword:index/getIdentity:getIdentity", {
        "address": args.address,
        "identification": args.identification,
        "internet": args.internet,
        "name": args.name,
        "notes": args.notes,
        "sections": args.sections,
        "tags": args.tags,
        "vault": args.vault,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getIdentity.
 */
export interface GetIdentityArgs {
    readonly address?: inputs.GetIdentityAddress;
    readonly identification?: inputs.GetIdentityIdentification;
    readonly internet?: inputs.GetIdentityInternet;
    readonly name?: string;
    readonly notes?: string;
    readonly sections?: inputs.GetIdentitySection[];
    readonly tags?: string[];
    readonly vault?: string;
}

/**
 * A collection of values returned by getIdentity.
 */
export interface GetIdentityResult {
    readonly address?: outputs.GetIdentityAddress;
    readonly identification?: outputs.GetIdentityIdentification;
    readonly internet?: outputs.GetIdentityInternet;
    readonly name?: string;
    readonly notes?: string;
    readonly sections?: outputs.GetIdentitySection[];
    readonly tags?: string[];
    readonly vault?: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
